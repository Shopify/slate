#! /bin/bash

f=~/.localhost_ssl;
ssl_crt=$f/server.crt
ssl_key=$f/server.key
b=$(tput bold)
c=$(tput sgr0)

local_ip=$(ipconfig getifaddr $(route get default | grep interface | awk '{print $2}'))
# local_ip=999.999.999 # (uncomment for testing)

domains=(
    "localhost"
    "$local_ip"
)

if [[ ! -f $ssl_crt ]]; then
    echo -e "\nðŸ›‘  ${b}Couldn't find a Slate SSL certificate:${c}"
    make_key=true
elif [[ ! $(openssl x509 -noout -text -in $ssl_crt | grep $local_ip) ]]; then
    echo -e "\nðŸ›‘  ${b}Your IP Address has changed:${c}"
    make_key=true
else
    echo -e "\nâœ…  ${b}Your IP address is still the same.${c}"
fi

if [[ $make_key == true ]]; then
    echo -e "Generating a new Slate SSL certificate...\n"
    count=$(( ${#domains[@]} - 1))
    mkcert ${domains[@]}

    # Create Slate's default certificate directory, if it doesn't exist
    test ! -d $f && mkdir $f

    # It appears mkcert bases its filenames off the number of domains passed after the first one.
    # This script predicts that filename, so it can copy it to Slate's default location.
    if [[ $count = 0 ]]; then
        mv ./localhost.pem $ssl_crt
        mv ./localhost-key.pem $ssl_key
    else
        mv ./localhost+$count.pem $ssl_crt
        mv ./localhost+$count-key.pem $ssl_key
    fi
fi
